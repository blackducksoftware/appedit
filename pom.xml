<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.blackducksoftware.tools</groupId>
	<artifactId>appedit</artifactId>
	<packaging>war</packaging>
	<version>1.4.0-SNAPSHOT</version>
	<name>Application Details Edit Webapp</name>
	<url>http://maven.apache.org</url>
	<licenses>
    	<license>
      		<name>GNU General Public License v2.0 only</name>
      		<url>http://www.gnu.org/licenses/old-licenses/gpl-2.0-standalone.html</url>
    	</license>
  	</licenses>
	<properties>
  	    <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>   

        <!-- Pointing to local environment  -->
		<build.profile.id>localhost</build.profile.id>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  	</properties>

	<dependencies>
	    <dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>

		<!-- Spring 3 dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>

		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>

		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>

		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		

		<!--    Spring Security -->
	<!-- The core module contains core authentication and and access control components -->
	<dependency>
    	<groupId>org.springframework.security</groupId>
    	<artifactId>spring-security-core</artifactId>

	</dependency>
		
	<!--  The config module contains the code used to parse XML configuration files using the Spring Security XML namespace 	-->
	<dependency>
    	<groupId>org.springframework.security</groupId>
    	<artifactId>spring-security-config</artifactId>

	</dependency>
	
	<!--  The taglibs module contains the Spring Security JPS tag libraries -->
	<dependency>
    	<groupId>org.springframework.security</groupId>
    	<artifactId>spring-security-taglibs</artifactId>

	</dependency>
		<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>javax.servlet-api</artifactId>
		<!-- version>3.0.1</version  -->
		 <scope>provided</scope>
    </dependency>

    <dependency>
        <groupId>javax.servlet.jsp</groupId>
        <artifactId>jsp-api</artifactId>
        <version>2.1</version>
        <scope>provided</scope>
    </dependency> 
		<dependency>
        	<groupId>jstl</groupId>
        	<artifactId>jstl</artifactId>
        	<version>1.2</version>
    	</dependency>
    	
		<dependency>
        	<groupId>javax.servlet.jsp</groupId>
        	<artifactId>jsp-api</artifactId>
        	<version>2.1</version>
        	<scope>provided</scope>
    	</dependency>  
		<dependency>
    		<groupId>javax.validation</groupId>
    		<artifactId>validation-api</artifactId>
		</dependency>
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>
	</dependency>
	
	<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
	</dependency>
	
	<!-- The following dependency is needed on the (some?) customer servers, but not on BDS servers -->
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-log4j12</artifactId>
	</dependency>

	<dependency>
		<groupId>commons-logging</groupId>
		<artifactId>commons-logging</artifactId>
		<!-- version>1.2</version -->
	</dependency>

	<dependency>
		<groupId>com.blackducksoftware.tools</groupId>
  		<artifactId>cf-7x-connector</artifactId>
  		<version>1.4.10-SNAPSHOT</version>
		<exclusions>
			<!-- Swap out commons-collections 3.2 for 3.2.2 to avoid CVE-2015-6420 -->
			<!--  Don't know why this is necessary here, but without it, maven used collections 3.2.1 -->
			<exclusion>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	<!-- Swap in commons-collections 3.2.2 for 3.2 to avoid CVE-2015-6420 -->
	<dependency>
		<groupId>commons-collections</groupId>
		<artifactId>commons-collections</artifactId>
		<version>3.2.2</version>
	</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<plugins>
			
			<plugin>
        		<groupId>org.apache.maven.plugins</groupId>
       	    	<artifactId>maven-war-plugin</artifactId>
        		<version>2.5</version>
        		<configuration>
          			<archive>
            			<manifest>
              				<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            			</manifest>
            			<manifestEntries>
							<Implementation-Build>${buildNumber}</Implementation-Build>
             			</manifestEntries>
          			</archive>
        		</configuration>
     	 	</plugin>
     	 	
			<!-- Generate the zips -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<!-- assemble executable package -->
						<id>assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/main/resources/appedit_assembly.xml</descriptor>
							</descriptors>
							<descriptorRef>build-zip</descriptorRef>
							<appendAssemblyId>true</appendAssemblyId>
						</configuration>
					</execution>
					<execution>
						<!-- assemble development package -->
						<id>dev</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/main/resources/dev_assembly.xml</descriptor>
							</descriptors>
							<descriptorRef>build-zip</descriptorRef>
							<appendAssemblyId>true</appendAssemblyId>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- generate a .jar (for the integration test project only) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>make-a-jar</id>
						<phase>compile</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- install the .jar (in addition to the primary artificat: the .war) -->
			<plugin>
    <groupId>org.codehaus.mojo</groupId>
    <artifactId>build-helper-maven-plugin</artifactId>
    <version>1.7</version>
    <executions>
        <execution>
            <id>attach-artifacts</id>
            <phase>package</phase>
            <goals>
                <goal>attach-artifact</goal>
            </goals>
            <configuration>
                <artifacts>
                    <artifact>
                        <file>target/appedit-${version}.jar</file>
                        <type>jar</type>                           
                    </artifact>
                </artifacts>
            </configuration>
        </execution>
    </executions>
</plugin>
<plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-javadoc-plugin</artifactId>
	<version>2.10.3</version>
	<executions>
		<execution>
			<id>attach-javadocs</id>
			<goals>
				<goal>jar</goal>
			</goals>
		</execution>
	</executions>
	<configuration>
		<sourcepath>src/main/java</sourcepath>
	</configuration>
</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-jar-plugin
										</artifactId>
										<versionRange>
											[2.6,)
										</versionRange>
										<goals>
											<goal>jar</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>				
			</plugins>
		</pluginManagement>
	</build>
	
	<dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>io.spring.platform</groupId>
            <artifactId>platform-bom</artifactId>
            <version>1.1.1.RELEASE</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
    </dependencies>
</dependencyManagement>

	<repositories>
		<repository>
			<id>jcenter</id>
			<name>JCenter</name>
			<url>http://jcenter.bintray.com</url>
		</repository>
		<repository>
			<id>bds-bintray</id>
			<name>BDS Bintray</name>
			<url>http://dl.bintray.com/bds/tools</url>
		</repository>
	</repositories>
	
	<!-- Push artifact to internal BLack Duck repo for integration testing -->
	<distributionManagement>
		<repository>
			<id>artifactory.blackducksoftware.com</id>
			<name>artifactory.blackducksoftware.com-releases</name>
			<url>http://artifactory.blackducksoftware.com:8081/artifactory/soleng</url>
		</repository>
		<snapshotRepository>
			<id>artifactory.blackducksoftware.com</id>
			<name>artifactory.blackducksoftware.com-snapshots</name>
			<url>http://artifactory.blackducksoftware.com:8081/artifactory/soleng</url>
		</snapshotRepository>

	</distributionManagement>
</project>
