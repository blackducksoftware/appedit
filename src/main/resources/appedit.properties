# Code Center details
cc.server.name=<Code Center URL>
cc.user.name=<username>
cc.password=<password>

# For each attribute, specify the UI label, the Code Center custom attribute name, and the
# regex to be used to validate values entered by the user.
# Start the numbering at 0 (attr.0), and create as many as you need.
attr.0.label=ITSM
attr.0.ccname=ITSM
attr.0.regex=.*

attr.1.label=ITRC
attr.1.ccname=ITRC
attr.1.regex=.*

# Login screen input validation is performed using these regular expressions
field.input.validation.regex.username=\[A-Za-z0-9@_.-\]+
field.input.validation.regex.psw=.+

# This is only used for NAI Audit functionality
# Regular expression for NAI Audit Comment input value
# Should allow empty string
field.input.validation.regex.naiauditcomment=.*

# Only need this if you're creating URL by hand and using appName
app.version=Unspecified

########################################################
# NAI Audit properties
# Remove or comment these if not using NAI Audit
########################################################

# Code Center database server name
db.server=int-cc-dev.blackducksoftware.com

# Configure the name of the Auditor role (a Code Center
# Overall role)
auditor.role.name=Auditor

# Configure the list of
# NAI Audit Status choicelist values. Start numbering at 0,
# and use sequential integers. You can define as many choices
# as you need.
# The value of nai.audit.status.0 must be the Unreviewed (not set) status
nai.audit.status.0=Unreviewed
nai.audit.status.1=Approved
nai.audit.status.2=Rejected

# The name of the NAI Audit Status value that means rejected
nai.audit.rejected.status.name=Rejected

# The name of the remediation status to audit
# Vulnerabilities with this remediation status will be auditable
nai.audit.rem.status.to.audit=Not An Issue (NAI)

# The value to which Remediation Status should be changed when auditor rejects
nai.audit.rejected.status.changes.rem.status.to=Unreviewed

# Date format used in comment date/time stamps
nai.audit.date.format=MMM-dd-yyyy hh:mm:ss z

# If running against a Code Center server older than 7.1.1,
# set the following property to true:
#nai.audit.cc.is.pre.7.1.1=false

# Setting nai.audit.preload.components to true will reduce
# initial NAI Audit page load time by periodically loading/updating
# all components into the component cache, so they do will not need
# to be fetched from Code Center. 
# You can also configure the batch size (number of components fetched
# from Code Center per transaction), the Quartz CronTrigger expression
# ("cron"), the cache.timeout value and units (dictates when cache
# items expire if not reloaded), and the cache size.
# The component loader will run once about minutes.until.initial.run
# after startup, then periodically on a schedule dictated by the 
# value of "cron".
nai.audit.preload.components=true
nai.audit.preload.components.minutes.until.initial.run=20
# "0 0 3 * * ?" is every day at 3am
nai.audit.preload.components.cron=0 0 3 * * ?
# Component cache timeout in units of DAYS or HOURS
nai.audit.preload.components.cache.timeout.value=2
nai.audit.preload.components.cache.timeout.units=DAYS
nai.audit.preload.components.cache.size=44000